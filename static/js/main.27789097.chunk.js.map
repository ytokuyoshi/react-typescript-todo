{"version":3,"sources":["common/component/CustomTable.tsx","common/component/CustomDialog.tsx","common/util/array.ts","entity/IData.ts","common/component/CustomFormDialog.tsx","common/component/CusstomToggleButtons.tsx","feature/App/styles.tsx","api/sample.ts","common/util/download.ts","common/util/localStorage.ts","entity/sampleData.ts","feature/App/hooksUtil.ts","feature/App/hooks.ts","common/util/json.ts","feature/App/messageConst.ts","feature/App/index.tsx","index.tsx"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","main","color","common","white","TableCell","useStyles","makeStyles","table","icon","Row","props","row","rowIndex","isHeader","handleHeaderClick","handleRowDeleteClick","handleRowCopyClick","handleRowClick","orderColName","isOrderAsc","classes","handleClickDummy","orderMark","TableRow","align","onClick","Array","isArray","map","item","index","Tooltip","title","className","CustomTable","header","rows","TableContainer","component","Paper","Table","aria-label","padding","size","TableHead","TableBody","CustomDialog","isOpen","onClickCancel","onClickOK","description","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","compare","a","b","buildEmptyStringList","length","list","push","IDataNullable2IData","data","pageTitle","pageDescription","colName","editRowIndex","isHeaderDisable","LAST_UPDATE_TITLE","input","margin","formControl","minWidth","CustomFormDialog","editRow","useState","inputData","setInputData","useEffect","tempRow","adjustLength","includes","maxWidth","col","TextField","label","type","onChange","e","value","target","tempData","handleOnChange","POSITION_LEFT","POSITION_RIGHT","CusstomToggleButtons","leftLabel","rightLabel","defaultIsLeftSelected","React","alignment","setAlignment","ToggleButtonGroup","exclusive","_event","newAlignment","ToggleButton","root","paddingLeft","paddingRight","paddingTop","paddingBottom","verticalAlign","marginLeft","marginRight","marginTop","marginBottom","button","getTodo","axios","get","console","error","download","fileData","fileName","bom","Uint8Array","blob","Blob","url","URL","createObjectURL","document","createElement","body","appendChild","href","click","remove","setTimeout","revokeObjectURL","LOCAL_STORAGE_KEY","setLocalStorage","localStorage","setItem","JSON","stringify","sampleData","sampleData2","getDefaultData","localData","getItem","parse","getLocalStorage","addLastUpdateDate","now","moment","format","useResource","setData","dataNumber","setDataNumber","setOrderColName","setIsOrderAsc","isOpenConfirmDialog","setIsOpenConfirmDialog","isOpenFormDialogIns","setIsOpenFormDialogIns","isOpenFormDialogUpd","setIsOpenFormDialogUpd","errorMsg","setErrorMsg","infoMsg","setInfoMsg","isLocked","setIsLocked","clearMsg","setLocalStorageAndStateData","useCallback","newData","setNewRows","newRows","handleDialogOK","handleFile","obj","jsonText","jsonText2obj","result","setIsHeaderDisable","textContent","replace","indexOf","isOrderAscTemp","sort","toLowerCase","x","y","sortUsingUpperItems","handleDownload","downloadJson","handleReset","handleDialogCancel","handleFormDialogInsOpen","handleFormDialogInsCancel","handleFormDialogInsOK","handleFormDialogUpdCancel","handleFormDialogUpdOK","rowTemp","handleChangeFile","file","files","fileReader","FileReader","onloadend","readAsText","handleChangeDeleteToggle","App","headerArea","Typography","accept","isHeaderVisible","fontSize","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.27789097.chunk.js","sourcesContent":["import { ReactElement } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n\nexport const SORT_MARK_ASC = ' ▲';\nexport const SORT_MARK_DESC = ' ▼';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    // minWidth: 650,\n  },\n  icon: {\n    // marginLeft: 5,\n  },\n}));\n\nconst Row = (props: {\n  row: string[];\n  rowIndex?: number;\n  isHeader?: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleHeaderClick?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowDeleteClick?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowCopyClick?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowClick?: any;\n  orderColName?: string;\n  isOrderAsc?: boolean;\n}): ReactElement => {\n  const { row, rowIndex, isHeader, handleHeaderClick, handleRowDeleteClick, handleRowCopyClick, handleRowClick, orderColName, isOrderAsc } = props;\n  const classes = useStyles();\n  const handleClickDummy = (): void => {\n    // 未設定の場合、何もしないためのダミーメソッド\n  };\n  const orderMark = isOrderAsc ? SORT_MARK_ASC : SORT_MARK_DESC;\n  return (\n    <>\n      <TableRow>\n        {isHeader ? (\n          <StyledTableCell align=\"right\" key={-100} onClick={handleClickDummy}>\n            {'#'}\n          </StyledTableCell>\n        ) : (\n          <TableCell align=\"right\" key={-100}>\n            {(rowIndex ?? 0) + 1}\n          </TableCell>\n        )}\n        {Array.isArray(row) &&\n          row.map((item, index) => {\n            return isHeader ? (\n              // header\n              <StyledTableCell align=\"left\" key={index} onClick={handleHeaderClick ?? handleClickDummy}>\n                {item}\n                {item === (orderColName ?? '') ? orderMark : ''}\n              </StyledTableCell>\n            ) : (\n              // detail\n              <TableCell align=\"left\" key={index} onClick={handleRowClick ? (): void => handleRowClick(rowIndex ?? -1) : handleClickDummy}>\n                {item}\n              </TableCell>\n            );\n          })}\n        {isHeader ? (\n          <StyledTableCell align=\"center\" key={-1} onClick={handleClickDummy}>\n            {/* {'削除'} */}\n          </StyledTableCell>\n        ) : (\n          <>\n            <TableCell align=\"center\" key={-1}>\n              <Tooltip title=\"削除\">\n                <DeleteIcon\n                  className={classes.icon}\n                  color=\"action\"\n                  onClick={handleRowDeleteClick ? (): void => handleRowDeleteClick(rowIndex ?? -1) : handleClickDummy}\n                />\n              </Tooltip>\n            </TableCell>\n          </>\n        )}\n        {isHeader ? (\n          <StyledTableCell align=\"center\" key={-10} onClick={handleClickDummy}>\n            {/* {'コピー'} */}\n          </StyledTableCell>\n        ) : (\n          <>\n            <TableCell align=\"center\" key={-10}>\n              <Tooltip title=\"コピー\">\n                <FileCopyOutlinedIcon\n                  className={classes.icon}\n                  color=\"action\"\n                  onClick={handleRowCopyClick ? (): void => handleRowCopyClick(rowIndex ?? -1) : handleClickDummy}\n                />\n              </Tooltip>\n            </TableCell>\n          </>\n        )}\n      </TableRow>\n    </>\n  );\n};\n\nconst CustomTable = (props: {\n  header: string[];\n  rows: string[][];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleHeaderClick: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowDeleteClick: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowCopyClick: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowClick: any;\n  orderColName: string;\n  isOrderAsc: boolean;\n}): ReactElement => {\n  const { header, rows, handleHeaderClick, handleRowDeleteClick, handleRowCopyClick, handleRowClick, orderColName, isOrderAsc } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\" padding=\"default\" size=\"small\">\n          <TableHead>\n            <Row row={header} isHeader={true} handleHeaderClick={handleHeaderClick} orderColName={orderColName} isOrderAsc={isOrderAsc} />\n          </TableHead>\n          <TableBody>\n            {Array.isArray(rows) &&\n              rows.map((row, index) => {\n                return (\n                  <Row\n                    row={row}\n                    key={index}\n                    rowIndex={index}\n                    handleRowDeleteClick={handleRowDeleteClick}\n                    handleRowCopyClick={handleRowCopyClick}\n                    handleRowClick={handleRowClick}\n                  />\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default CustomTable;\n","import { ReactElement } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst CustomDialog = (props: {\n  isOpen: boolean;\n  onClickCancel: () => void;\n  onClickOK: () => void;\n  title: string;\n  description: string;\n}): ReactElement => {\n  const { isOpen, onClickCancel, onClickOK, title, description } = props;\n  return (\n    <>\n      <Dialog open={isOpen} onClose={onClickCancel} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{description}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"contained\" color=\"default\">\n            キャンセル\n          </Button>\n          <Button onClick={onClickOK} variant=\"contained\" color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CustomDialog;\n","// 単一項目のソート\nexport const sort = (rows: string[][], rowIndex: number, isOrderAsc: boolean): string[][] => {\n  return rows.sort((a, b) => {\n    return compare(a[rowIndex].toLowerCase(), b[rowIndex].toLowerCase(), isOrderAsc);\n  });\n};\n\n// 上位項目も含めた文字列連結によるソート\nexport const sortUsingUpperItems = (rows: string[][], rowIndex: number, isOrderAsc: boolean): string[][] => {\n  const divider = '$$$';\n  return rows.sort((a, b) => {\n    // 指定の位置を文字比較でソートする\n    let x = '';\n    let y = '';\n    for (let index = 0; index <= rowIndex; index++) {\n      x = `${x}${divider}${a[index]}`;\n      y = `${y}${divider}${b[index]}`;\n    }\n    return compare(x.toLowerCase(), y.toLowerCase(), isOrderAsc);\n  });\n};\n\nconst compare = (a: string, b: string, isOrderAsc: boolean): number => {\n  if (isOrderAsc) {\n    return a < b ? -1 : 1;\n  } else {\n    return a > b ? -1 : 1;\n  }\n};\n\nexport const buildEmptyStringList = (length: number): string[] => {\n  const list: string[] = [];\n  for (let index = 0; index < length; index++) {\n    list.push('');\n  }\n  return list;\n};\n","export interface IData {\n  pageTitle: string;\n  pageDescription: string[];\n  colName: string[];\n  rows: string[][];\n  editRowIndex: number;\n  isHeaderDisable: boolean;\n}\n\nexport interface IDataNullable {\n  pageTitle?: string;\n  pageDescription?: string[];\n  colName?: string[];\n  rows?: string[][];\n  editRowIndex?: number;\n  isHeaderDisable?: boolean;\n}\n\nexport const IDataNullable2IData = (data: IDataNullable): IData => {\n  return {\n    pageTitle: data.pageTitle ?? '',\n    pageDescription: data.pageDescription ?? [],\n    colName: data.colName ?? [],\n    rows: data.rows ?? [],\n    editRowIndex: data.editRowIndex ?? -1,\n    isHeaderDisable: data.isHeaderDisable ?? false,\n  };\n};\n\nexport const LAST_UPDATE_TITLE = '最終更新日時';\nexport const MEMO = 'メモ';\n","import { ReactElement, useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { buildEmptyStringList } from 'common/util/array';\nimport { LAST_UPDATE_TITLE } from 'entity/IData';\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    margin: 5,\n  },\n  formControl: {\n    minWidth: 120,\n  },\n}));\n\nconst CustomFormDialog = (props: {\n  isOpen: boolean;\n  onClickCancel: () => void;\n  onClickOK: (row: string[]) => void;\n  title: string;\n  description?: string;\n  colName: string[];\n  editRow?: string[];\n}): ReactElement => {\n  const { isOpen, onClickCancel, onClickOK, title, description, colName, editRow } = props;\n  const classes = useStyles();\n  const [inputData, setInputData] = useState<string[]>(buildEmptyStringList(colName?.length));\n\n  // inputDataはダイアログの開閉時に初期化する\n  useEffect(() => {\n    if (!colName) return;\n\n    // Edit用データがそろっている場合はそちらを画面に反映する\n    // 最終更新日は除外する\n    if (editRow && Array.isArray(editRow)) {\n      const tempRow = [];\n      for (let index = 0; index < colName.length; index++) {\n        const title = colName[index];\n        if (title !== LAST_UPDATE_TITLE) {\n          tempRow.push(editRow[index]);\n        }\n      }\n      setInputData(tempRow);\n    } else {\n      let adjustLength = 0;\n      if (colName.includes(LAST_UPDATE_TITLE)) {\n        adjustLength = 1;\n      }\n      setInputData(buildEmptyStringList(colName.length - adjustLength));\n    }\n  }, [isOpen, colName, editRow]);\n\n  const handleClickOk = (): void => {\n    onClickOK(inputData);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleOnChange = (e: any, index: number): void => {\n    const value: string = e.target?.value ?? '';\n    const tempData = [...inputData];\n    tempData[index] = value;\n    setInputData(tempData);\n  };\n\n  return (\n    <div>\n      <Dialog maxWidth=\"lg\" open={isOpen} onClose={onClickCancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          {description ? <DialogContentText id=\"alert-dialog-description\">{description}</DialogContentText> : null}\n          {Array.isArray(colName) &&\n            colName.map((col: string, index: number) => {\n              // 最終更新日は除外する\n              if (col === LAST_UPDATE_TITLE) return null;\n              return (\n                <TextField\n                  key={index}\n                  className={classes.input}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  id={col}\n                  label={col}\n                  type=\"\"\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                  onChange={(e: any): void => handleOnChange(e, index)}\n                  value={inputData[index]}\n                />\n              );\n            })}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"contained\" color=\"default\">\n            キャンセル\n          </Button>\n          <Button onClick={handleClickOk} variant=\"contained\" color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomFormDialog;\n","import React, { ReactElement } from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst POSITION_LEFT = 'POSITION_LEFT';\nconst POSITION_RIGHT = 'POSITION_RIGHT';\n\nconst CusstomToggleButtons = (props: {\n  onChange?: (isLeftSelected: boolean) => void;\n  leftLabel: string;\n  rightLabel: string;\n  defaultIsLeftSelected: boolean;\n}): ReactElement => {\n  const { onChange, leftLabel, rightLabel, defaultIsLeftSelected } = props;\n  const [alignment, setAlignment] = React.useState<string>(defaultIsLeftSelected ? POSITION_LEFT : POSITION_RIGHT);\n\n  const handleAlignment = (_event: React.MouseEvent<HTMLElement>, newAlignment: string): void => {\n    // 未選択は許可しない。未選択の場合、nullでセットされている\n    if (!newAlignment) return;\n\n    setAlignment(newAlignment);\n    if (onChange) onChange(newAlignment === POSITION_LEFT);\n  };\n\n  return (\n    <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment} aria-label=\"text alignment\">\n      <ToggleButton value={POSITION_LEFT} aria-label={POSITION_LEFT}>\n        {leftLabel}\n      </ToggleButton>\n      <ToggleButton value={POSITION_RIGHT} aria-label={POSITION_RIGHT}>\n        {rightLabel}\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n};\n\nexport default CusstomToggleButtons;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  button: {\n    marginLeft: 0,\n    marginRight: 20,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n}));\n","import axios from 'axios';\n\n// API sample:このデータは利用していません。実装サンプルです\nexport const getTodo = async (): Promise<void> => {\n  try {\n    // const response = await axios.get('https://jsonplaceholder.typicode.com/todos/1');\n    // console.log(response.data);\n    await axios.get('https://jsonplaceholder.typicode.com/todos/1');\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import moment from 'moment';\n\nconst download = (fileData: string, type: string, fileName: string): void => {\n  try {\n    const bom = new Uint8Array([0xef, 0xbb, 0xbf]);\n    const blob = new Blob([bom, fileData], { type });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.download = fileName;\n    a.href = url;\n    a.click();\n    a.remove();\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    }, 1e4);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const downloadJson = (fileData: string, fileNamePrefix = ''): void => {\n  download(fileData, 'text/plain', `${fileNamePrefix}_${moment().format('YYYYMMDD_HHmm')}.json`);\n};\n","const LOCAL_STORAGE_KEY = 'LOCAL_STORAGE_KEY';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getLocalStorage = (): any => {\n  const data: string = localStorage.getItem(LOCAL_STORAGE_KEY) ?? '';\n  if (data.length > 0) return JSON.parse(data);\n  return null;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport const setLocalStorage = (data: any): void => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(data));\n};\n","import { getLocalStorage, setLocalStorage } from 'common/util/localStorage';\nimport { IData, IDataNullable, IDataNullable2IData, LAST_UPDATE_TITLE, MEMO } from 'entity/IData';\n\nexport const sampleData: IDataNullable = {\n  pageTitle: 'TODOリスト',\n  pageDescription: [\n    '普通のTODOリスト用途だけでなく、部屋の片づけ、持ち物管理など、使い方次第で色々使えます',\n    'カラムの数とタイトルはJSONを編集し再アップロードすることで変更可能',\n    'ページタイトルと説明文もJSONで管理しているので編集可能',\n    '「最終更新日」はヘッダー名称（colName）に1か所だけ設定してください、位置は移動可能',\n    '「メモ」「最終更新日」以外は上位項目を含めてソートします（「メモ」「最終更新日」は右端に配置する前提の仕様）',\n  ],\n  colName: ['item1', 'item2', LAST_UPDATE_TITLE],\n  rows: [\n    ['a_itemName11', 'c_itemName21', '2021/06/01 11:23'],\n    ['b_itemName12', 'a_itemName22', '2021/06/01 11:24'],\n    ['c_itemName13', 'b_itemName23', '2021/06/01 11:25'],\n  ],\n};\n\nexport const sampleData2: IDataNullable = {\n  pageTitle: '持ち物リスト',\n  pageDescription: [],\n  colName: ['大分類', '中分類', '小分類', MEMO, LAST_UPDATE_TITLE],\n  rows: [\n    ['PCデスク', '卓上', '27inch FullHD Display', '', '2021/06/01 11:22'],\n    ['PCデスク', '卓上', 'PS4', '下段に移動する', '2021/06/01 11:22'],\n    ['PCデスク', '下段', 'デスクトップPC', '', '2021/06/01 11:22'],\n    ['PCデスク', '下段', 'BOSEスーパーウーファー', '', '2021/06/01 11:22'],\n    ['PCデスク', '下段', 'かご', '要整理', '2021/06/01 11:22'],\n  ],\n};\n\nexport const getDefaultData = (): IData => {\n  const localData: IDataNullable = getLocalStorage();\n  if (localData) return IDataNullable2IData(localData);\n\n  // 初期データはローカルストレージに入れる\n  setLocalStorage(sampleData);\n\n  return IDataNullable2IData(sampleData);\n};\n","import moment from 'moment';\nimport { LAST_UPDATE_TITLE } from 'entity/IData';\n\n// 最終更新日を追加する\nexport const addLastUpdateDate = (colName: string[], row: string[]): string[] => {\n  const tempRow: string[] = [];\n  let rowIndex = 0;\n  for (let index = 0; index < colName.length; index++) {\n    const title = colName[index];\n    if (title === LAST_UPDATE_TITLE) {\n      // const now = `${moment().format('YYYY/MM/DD HH:mm:SS')}`;\n      const now = `${moment().format('YYYY/MM/DD HH:mm')}`;\n      tempRow.push(now);\n    } else {\n      tempRow.push(row[rowIndex]);\n      rowIndex++;\n    }\n  }\n  return tempRow;\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { getTodo } from 'api/sample';\nimport { SORT_MARK_ASC, SORT_MARK_DESC } from 'common/component/CustomTable';\nimport { downloadJson } from 'common/util/download';\nimport { setLocalStorage } from 'common/util/localStorage';\nimport { sort, sortUsingUpperItems } from 'common/util/array';\nimport { jsonText2obj } from 'common/util/json';\nimport { IData, IDataNullable2IData } from 'entity/IData';\nimport { sampleData, sampleData2, getDefaultData } from 'entity/sampleData';\nimport { LAST_UPDATE_TITLE, MEMO } from 'entity/IData';\nimport { addLastUpdateDate } from './hooksUtil';\nimport { IAppResources } from './IAppResources';\nimport { MSG_I_001, MSG_E_001, MSG_E_002, MSG_E_003 } from './messageConst';\n\nexport const useResource = (): IAppResources => {\n  useEffect(() => {\n    // API sample:このデータは利用していません。実装サンプルです\n    getTodo();\n  }, []);\n\n  const [data, setData] = useState<IData>(getDefaultData());\n  const [dataNumber, setDataNumber] = useState<number>(1);\n  const [orderColName, setOrderColName] = useState<string>('');\n  const [isOrderAsc, setIsOrderAsc] = useState<boolean>(true);\n  const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState<boolean>(false);\n  const [isOpenFormDialogIns, setIsOpenFormDialogIns] = useState<boolean>(false);\n  const [isOpenFormDialogUpd, setIsOpenFormDialogUpd] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string>('');\n  const [infoMsg, setInfoMsg] = useState<string>('');\n  const [isLocked, setIsLocked] = useState<boolean>(true);\n\n  const isHeaderDisable = (): boolean => data.isHeaderDisable ?? false;\n\n  const setIsHeaderDisable = (isHeaderDisable: boolean): void => {\n    const newData = { ...data, isHeaderDisable };\n    setLocalStorage(newData);\n    setData(newData);\n  };\n\n  const clearMsg = (): void => {\n    setInfoMsg('');\n    setErrorMsg('');\n  };\n\n  // ローカルストレージとuseStateのデータを更新する\n  const setLocalStorageAndStateData = useCallback((newData: IData): void => {\n    setLocalStorage(newData);\n    setData(newData);\n  }, []);\n\n  // 新しいRowsデータに更新する\n  const setNewRows = (newRows: string[][]): void => {\n    // ポインタを書き換えるためスプレッド演算子でコピーする\n    const newData = { ...data };\n    newData.rows = [...newRows];\n    setLocalStorageAndStateData(newData);\n  };\n\n  // 1-1.ヘッダークリック\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleHeaderClick = (e: any): void => {\n    clearMsg();\n    // ソートマークは判定で邪魔なので置換して消しておく\n    const colName = (e.target?.textContent ?? '').replace(SORT_MARK_ASC, '').replace(SORT_MARK_DESC, '');\n    const index = data.colName.indexOf(colName);\n\n    let isOrderAscTemp = true;\n    if (orderColName === colName) {\n      if (isOrderAsc) {\n        isOrderAscTemp = false;\n      }\n    }\n\n    if (colName === LAST_UPDATE_TITLE || colName === MEMO) {\n      // 単一項目のソート\n      setNewRows(sort(data.rows, index, isOrderAscTemp));\n    } else {\n      // 上位項目も含めた文字列連結によるソート\n      setNewRows(sortUsingUpperItems(data.rows, index, isOrderAscTemp));\n    }\n\n    // 次回、逆順でソートを行うために設定しておく\n    setOrderColName(colName);\n    setIsOrderAsc(isOrderAscTemp);\n  };\n\n  // 1-2.行の削除ボタンクリック\n  const handleRowDeleteClick = (rowIndex: number): void => {\n    clearMsg();\n\n    // 削除ロック中は何もしない\n    if (isLocked) {\n      setErrorMsg(MSG_E_003);\n      return;\n    }\n\n    const newRows: string[][] = [];\n    for (let index = 0; index < data.rows.length; index++) {\n      // 削除行以外をコピーしてPushする\n      if (index !== rowIndex) {\n        const row = data.rows[index];\n        newRows.push([...row]);\n      }\n    }\n    setNewRows(newRows);\n  };\n\n  // 1-3.行のコピーボタンクリック\n  const handleRowCopyClick = (rowIndex: number): void => {\n    clearMsg();\n    const newRows: string[][] = [];\n    for (let index = 0; index < data.rows.length; index++) {\n      const row = data.rows[index];\n      newRows.push([...row]);\n      // コピー行は2回Pushする\n      if (index === rowIndex) {\n        newRows.push([...row]);\n      }\n    }\n    setNewRows(newRows);\n  };\n\n  // 1-4.行クリック=Edit\n  const handleRowClick = (rowIndex: number): void => {\n    clearMsg();\n    // Edit対象行をセットしダイアログを開く\n    setData({ ...data, editRowIndex: rowIndex });\n    setIsOpenFormDialogUpd(true);\n  };\n\n  // 2-1.削除ロック\n  const handleChangeDeleteToggle = (isLocked: boolean): void => {\n    clearMsg();\n    setIsLocked(isLocked);\n  };\n\n  // 2-2.ダウンロード\n  const handleDownload = (data: IData): void => {\n    clearMsg();\n    downloadJson(JSON.stringify(data), data.pageTitle);\n  };\n\n  // 2-3-1.サンプルデータ読込\n  const handleReset = (dataNumber: number): void => {\n    clearMsg();\n    // 確認ダイアログのOK時に参照するため、先に設定しておく\n    setDataNumber(dataNumber);\n\n    setIsOpenConfirmDialog(true);\n  };\n\n  // 2-3-2.サンプルデータ読込 cancel\n  const handleDialogCancel = (): void => {\n    clearMsg();\n    setIsOpenConfirmDialog(false);\n  };\n\n  // 2-3-3.サンプルデータ読込 OK\n  const handleDialogOK = useCallback((): void => {\n    clearMsg();\n    // ボタン押下時に指定したデータをロードする\n    switch (dataNumber) {\n      case 2:\n        setLocalStorageAndStateData(IDataNullable2IData(sampleData2));\n        break;\n      default:\n        setLocalStorageAndStateData(IDataNullable2IData(sampleData));\n        break;\n    }\n    // ソート順をリセットする\n    setOrderColName('');\n    setIsOrderAsc(true);\n    // ダイアログを閉じる\n    setIsOpenConfirmDialog(false);\n  }, [dataNumber, setIsOpenConfirmDialog, setIsOrderAsc, setLocalStorageAndStateData, setOrderColName]);\n\n  // 2-4-1i.登録ダイアログ open\n  const handleFormDialogInsOpen = (): void => {\n    clearMsg();\n    setIsOpenFormDialogIns(true);\n  };\n\n  // 2-4-2i.登録ダイアログ cancel\n  const handleFormDialogInsCancel = (): void => {\n    clearMsg();\n    setIsOpenFormDialogIns(false);\n  };\n\n  // 2-4-3i.登録ダイアログ OK\n  const handleFormDialogInsOK = (row: string[]): void => {\n    clearMsg();\n    const newRows: string[][] = [];\n\n    // 最終更新日を追加する\n    const tempRow = addLastUpdateDate(data.colName, row);\n\n    // 新規データは先頭に追加する\n    newRows.push(tempRow);\n\n    for (let index = 0; index < data.rows.length; index++) {\n      const row = data.rows[index];\n      newRows.push([...row]);\n    }\n    setNewRows(newRows);\n    setIsOpenFormDialogIns(false);\n  };\n\n  // 2-4-1u.更新ダイアログ open\n  // const handleFormDialogUpdOpen = (): void => {\n  //   clearMsg();\n  //   setIsOpenFormDialogUpd(true);\n  // };\n\n  // 2-4-2u.更新ダイアログ cancel\n  const handleFormDialogUpdCancel = (): void => {\n    clearMsg();\n    setIsOpenFormDialogUpd(false);\n  };\n\n  // 2-4-3u.更新ダイアログ OK\n  const handleFormDialogUpdOK = (row: string[]): void => {\n    clearMsg();\n    const newRows: string[][] = [];\n    for (let index = 0; index < data.rows.length; index++) {\n      if (index === data.editRowIndex) {\n        // 最終更新日を追加する\n        const tempRow = addLastUpdateDate(data.colName, row);\n        newRows.push([...tempRow]);\n      } else {\n        const rowTemp = data.rows[index];\n        newRows.push([...rowTemp]);\n      }\n    }\n    setNewRows(newRows);\n    setIsOpenFormDialogUpd(false);\n  };\n\n  // 2-5-1.upload\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleFile = (e: any): void => {\n    const content = e.target.result;\n    const obj: IData = jsonText2obj(content);\n    if (obj) {\n      // JSONに変換可能なものだけインポートする\n      if (Array.isArray(obj.rows) && obj.rows.length > 0) {\n        // 厳密な型チェックは行わないが、ゼロ件データは除外する\n        setLocalStorageAndStateData(obj);\n        setInfoMsg(MSG_I_001);\n      } else {\n        setErrorMsg(MSG_E_001);\n      }\n    } else {\n      setErrorMsg(MSG_E_002);\n    }\n  };\n\n  // 2-5-2.upload\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleChangeFile = (e: any): void => {\n    clearMsg();\n    try {\n      const file = e.target.files[0];\n      const fileReader = new FileReader();\n      fileReader.onloadend = handleFile;\n      fileReader.readAsText(file);\n    } catch (error) {\n      // ファイル選択を連続で実行、キャンセルを繰り返すとエラーが発生する\n      // console.log('handleChangeFile error', error);\n    }\n  };\n\n  return {\n    data,\n    orderColName,\n    isOrderAsc,\n    isOpenConfirmDialog,\n    isOpenFormDialogIns,\n    isOpenFormDialogUpd,\n    errorMsg,\n    infoMsg,\n    isHeaderDisable,\n    setIsHeaderDisable,\n    handleHeaderClick,\n    handleRowDeleteClick,\n    handleRowCopyClick,\n    handleRowClick,\n    handleDownload,\n    handleReset,\n    handleDialogCancel,\n    handleDialogOK,\n    handleFormDialogInsOpen,\n    handleFormDialogInsCancel,\n    handleFormDialogInsOK,\n    handleFormDialogUpdCancel,\n    handleFormDialogUpdOK,\n    handleChangeFile,\n    handleChangeDeleteToggle,\n  };\n};\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const jsonText2obj = (jsonText = ''): any => {\n  try {\n    const obj = JSON.parse(jsonText);\n    return obj;\n  } catch (error) {\n    return null;\n  }\n};\n\n// // eslint-disable-next-line @typescript-eslint/no-explicit-any\n// const jsonText2dataList = (jsonText: string): any => {\n//   try {\n//     const jsonObj = JSON.parse(jsonText);\n//     return [...jsonObj.data];\n//   } catch (error) {\n//     return [];\n//   }\n// };\n\n// const formatJsonText = (jsonText = ''): string => {\n//   try {\n//     return JSON.stringify(jsonText2obj(jsonText));\n//   } catch (error) {\n//     return '';\n//   }\n// };\n","export const MSG_I_001 = 'ファイル取込みを行いました。';\nexport const MSG_E_001 = 'データがゼロ件です。';\nexport const MSG_E_002 = 'JSONフォーマットエラーです。ファイルを修正して再度アップロードしてください。';\nexport const MSG_E_003 = 'ロックを解除してください。';\n","import { ReactElement } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\n\nimport CustomTable from 'common/component/CustomTable';\nimport CustomDialog from 'common/component/CustomDialog';\nimport CustomFormDialog from 'common/component/CustomFormDialog';\nimport CusstomToggleButtons from 'common/component/CusstomToggleButtons';\n\nimport { useStyles } from './styles';\nimport { useResource } from './hooks';\n\nconst App = (): ReactElement => {\n  const {\n    data,\n    orderColName,\n    isOrderAsc,\n    isOpenConfirmDialog,\n    isOpenFormDialogIns,\n    isOpenFormDialogUpd,\n    errorMsg,\n    infoMsg,\n    isHeaderDisable,\n    setIsHeaderDisable,\n    handleHeaderClick,\n    handleRowDeleteClick,\n    handleRowCopyClick,\n    handleRowClick,\n    handleDownload,\n    handleReset,\n    handleDialogCancel,\n    handleDialogOK,\n    handleFormDialogInsOpen,\n    handleFormDialogInsCancel,\n    handleFormDialogInsOK,\n    handleFormDialogUpdCancel,\n    handleFormDialogUpdOK,\n    handleChangeFile,\n    handleChangeDeleteToggle,\n  } = useResource();\n  const classes = useStyles();\n\n  const headerArea = (\n    <>\n      <Typography variant=\"h4\">{data.pageTitle}</Typography>\n      {Array.isArray(data.pageDescription) &&\n        data.pageDescription.map((description, index) => (\n          <Typography key={index} variant=\"body1\">\n            - {description}\n          </Typography>\n        ))}\n      <br />\n      <input className={classes.button} type=\"file\" accept=\".json\" onChange={(e): void => handleChangeFile(e)} />\n      <Button className={classes.button} variant=\"contained\" color=\"default\" onClick={(): void => handleDownload(data)}>\n        ダウンロード\n      </Button>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" onClick={(): void => handleReset(1)}>\n        サンプルデータ読込\n      </Button>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" onClick={(): void => handleReset(2)}>\n        サンプルデータ読込2\n      </Button>\n    </>\n  );\n\n  return (\n    <div className={classes.root}>\n      {isHeaderDisable() ? (\n        <>\n          <b>{data.pageTitle}</b>&nbsp;&nbsp;&nbsp;\n        </>\n      ) : (\n        headerArea\n      )}\n      <CusstomToggleButtons\n        onChange={(isHeaderVisible: boolean): void => setIsHeaderDisable(!isHeaderVisible)}\n        leftLabel=\"ヘッダー表示\"\n        rightLabel=\"非表示\"\n        defaultIsLeftSelected={!data.isHeaderDisable}\n      />\n      &nbsp;&nbsp;&nbsp;\n      <CusstomToggleButtons onChange={handleChangeDeleteToggle} leftLabel=\"ロック\" rightLabel=\"解除\" defaultIsLeftSelected={true} />\n      <AddIcon className={classes.icon} color=\"action\" fontSize={'large'} onClick={handleFormDialogInsOpen} />\n      <Typography variant=\"body1\" color=\"error\">\n        {errorMsg}\n      </Typography>\n      <Typography variant=\"body1\">{infoMsg}</Typography>\n      <br />\n      <CustomTable\n        header={data.colName}\n        rows={data.rows}\n        handleHeaderClick={handleHeaderClick}\n        handleRowDeleteClick={handleRowDeleteClick}\n        handleRowCopyClick={handleRowCopyClick}\n        handleRowClick={handleRowClick}\n        orderColName={orderColName}\n        isOrderAsc={isOrderAsc}\n      />\n      <CustomDialog\n        isOpen={isOpenConfirmDialog}\n        onClickCancel={handleDialogCancel}\n        onClickOK={handleDialogOK}\n        title={'注意'}\n        description={'サンプルデータ読込を実行するとデータは初期化されます。実行する場合はOKを押してください。'}\n      />\n      <CustomFormDialog\n        isOpen={isOpenFormDialogIns}\n        onClickCancel={handleFormDialogInsCancel}\n        onClickOK={(row: string[]): void => handleFormDialogInsOK(row)}\n        title={'データ登録'}\n        description={''}\n        colName={data.colName}\n      />\n      <CustomFormDialog\n        isOpen={isOpenFormDialogUpd}\n        onClickCancel={handleFormDialogUpdCancel}\n        onClickOK={(row: string[]): void => handleFormDialogUpdOK(row)}\n        title={'データ更新'}\n        description={''}\n        colName={data.colName}\n        editRow={data.rows ? data.rows[data.editRowIndex] : []}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './feature/App';\n// import reportWebVitals from \"./reportWebVitals\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root'),\n// );\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}