{"version":3,"sources":["common/component/CustomTable.tsx","common/component/CustomDialog.tsx","common/util/array.ts","entity/IData.ts","common/component/CustomFormDialog.tsx","common/component/CusstomToggleButtons.tsx","feature/App/styles.tsx","api/sample.ts","common/util/download.ts","common/util/localStorage.ts","entity/sampleData.ts","feature/App/hooksUtil.ts","feature/App/hooks.ts","common/util/json.ts","feature/App/messageConst.ts","feature/App/index.tsx","index.tsx"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","primary","main","color","common","white","TableCell","useStyles","makeStyles","table","minWidth","icon","marginLeft","Row","props","row","rowIndex","isHeader","handleHeaderClick","handleRowDeleteClick","handleRowCopyClick","handleRowClick","orderColName","isOrderAsc","classes","handleClickDummy","orderMark","TableRow","align","onClick","Array","isArray","map","item","index","Tooltip","title","className","CustomTable","header","rows","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","CustomDialog","isOpen","onClickCancel","onClickOK","description","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","variant","autoFocus","buildEmptyStringList","length","list","push","LAST_UPDATE_TITLE","input","margin","formControl","CustomFormDialog","colName","editRow","useState","inputData","setInputData","useEffect","tempRow","adjustLength","includes","maxWidth","col","TextField","label","type","onChange","e","value","target","tempData","handleOnChange","LOCKED","UNLOCKED","CusstomToggleButtons","React","alignment","setAlignment","ToggleButtonGroup","exclusive","_event","newAlignment","ToggleButton","root","paddingLeft","paddingRight","paddingTop","paddingBottom","verticalAlign","marginRight","marginTop","marginBottom","button","getTodo","a","axios","get","console","error","downloadJson","fileData","fileName","bom","Uint8Array","blob","Blob","url","URL","createObjectURL","document","createElement","body","appendChild","download","href","click","remove","setTimeout","revokeObjectURL","moment","format","LOCAL_STORAGE_KEY","setLocalStorage","data","localStorage","setItem","JSON","stringify","sampleData","pageTitle","pageDescription","editRowIndex","sampleData2","getDefaultData","localData","getItem","parse","getLocalStorage","addLastUpdateDate","now","useResource","setData","dataNumber","setDataNumber","setOrderColName","setIsOrderAsc","isOpenConfirmDialog","setIsOpenConfirmDialog","isOpenFormDialogIns","setIsOpenFormDialogIns","isOpenFormDialogUpd","setIsOpenFormDialogUpd","errorMsg","setErrorMsg","infoMsg","setInfoMsg","isLocked","setIsLocked","clearMsg","setLocalStorageAndStateData","useCallback","newData","setNewRows","newRows","handleDialogOK","handleFile","obj","jsonText","jsonText2obj","result","textContent","replace","indexOf","isOrderAscTemp","sortedRows","sort","b","toLowerCase","handleDownload","handleReset","handleDialogCancel","handleFormDialogInsOpen","handleFormDialogInsCancel","handleFormDialogInsOK","handleFormDialogUpdCancel","handleFormDialogUpdOK","rowTemp","handleChangeFile","file","files","fileReader","FileReader","onloadend","readAsText","handleChangeDeleteToggle","App","Typography","accept","fontSize","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5c25b0ca.chunk.js","sourcesContent":["import { ReactElement } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n\nexport const SORT_MARK_ASC = ' ▲';\nexport const SORT_MARK_DESC = ' ▼';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    minWidth: 650,\n  },\n  icon: {\n    marginLeft: 5,\n  },\n}));\n\nconst Row = (props: {\n  row: string[];\n  rowIndex?: number;\n  isHeader?: boolean;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleHeaderClick?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowDeleteClick?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowCopyClick?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowClick?: any;\n  orderColName?: string;\n  isOrderAsc?: boolean;\n}): ReactElement => {\n  const { row, rowIndex, isHeader, handleHeaderClick, handleRowDeleteClick, handleRowCopyClick, handleRowClick, orderColName, isOrderAsc } = props;\n  const classes = useStyles();\n  const handleClickDummy = (): void => {\n    // 未設定の場合、何もしないためのダミーメソッド\n  };\n  const orderMark = isOrderAsc ? SORT_MARK_ASC : SORT_MARK_DESC;\n  return (\n    <>\n      <TableRow>\n        {isHeader ? (\n          <StyledTableCell align=\"right\" key={-100} onClick={handleClickDummy}>\n            {'#'}\n          </StyledTableCell>\n        ) : (\n          <TableCell align=\"right\" key={-100}>\n            {(rowIndex ?? 0) + 1}\n          </TableCell>\n        )}\n        {Array.isArray(row) &&\n          row.map((item, index) => {\n            return isHeader ? (\n              // header\n              <StyledTableCell align=\"left\" key={index} onClick={handleHeaderClick ?? handleClickDummy}>\n                {item}\n                {item === (orderColName ?? '') ? orderMark : ''}\n              </StyledTableCell>\n            ) : (\n              // detail\n              <TableCell align=\"left\" key={index} onClick={handleRowClick ? (): void => handleRowClick(rowIndex ?? -1) : handleClickDummy}>\n                {item}\n              </TableCell>\n            );\n          })}\n        {isHeader ? (\n          <StyledTableCell align=\"center\" key={-1} onClick={handleClickDummy}>\n            {'コピー / 削除'}\n          </StyledTableCell>\n        ) : (\n          <>\n            <TableCell align=\"center\" key={-1}>\n              <Tooltip title=\"コピー\">\n                <FileCopyOutlinedIcon\n                  className={classes.icon}\n                  color=\"action\"\n                  onClick={handleRowCopyClick ? (): void => handleRowCopyClick(rowIndex ?? -1) : handleClickDummy}\n                />\n              </Tooltip>\n              <Tooltip title=\"削除\">\n                <DeleteIcon\n                  className={classes.icon}\n                  color=\"action\"\n                  onClick={handleRowDeleteClick ? (): void => handleRowDeleteClick(rowIndex ?? -1) : handleClickDummy}\n                />\n              </Tooltip>\n            </TableCell>\n          </>\n        )}\n      </TableRow>\n    </>\n  );\n};\n\nconst CustomTable = (props: {\n  header: string[];\n  rows: string[][];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleHeaderClick: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowDeleteClick: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowCopyClick: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handleRowClick: any;\n  orderColName: string;\n  isOrderAsc: boolean;\n}): ReactElement => {\n  const { header, rows, handleHeaderClick, handleRowDeleteClick, handleRowCopyClick, handleRowClick, orderColName, isOrderAsc } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <Row row={header} isHeader={true} handleHeaderClick={handleHeaderClick} orderColName={orderColName} isOrderAsc={isOrderAsc} />\n          </TableHead>\n          <TableBody>\n            {Array.isArray(rows) &&\n              rows.map((row, index) => {\n                return (\n                  <Row\n                    row={row}\n                    key={index}\n                    rowIndex={index}\n                    handleRowDeleteClick={handleRowDeleteClick}\n                    handleRowCopyClick={handleRowCopyClick}\n                    handleRowClick={handleRowClick}\n                  />\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default CustomTable;\n","import { ReactElement } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst CustomDialog = (props: {\n  isOpen: boolean;\n  onClickCancel: () => void;\n  onClickOK: () => void;\n  title: string;\n  description: string;\n}): ReactElement => {\n  const { isOpen, onClickCancel, onClickOK, title, description } = props;\n  return (\n    <>\n      <Dialog open={isOpen} onClose={onClickCancel} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{description}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"contained\" color=\"default\">\n            キャンセル\n          </Button>\n          <Button onClick={onClickOK} variant=\"contained\" color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CustomDialog;\n","export const sort = (rows: string[][], index: number, isOrderAsc: boolean): string[][] => {\n  return rows.sort((a, b) => {\n    // 指定の位置を文字比較でソートする\n    if (isOrderAsc) {\n      return a[index].toLowerCase() < b[index].toLowerCase() ? -1 : 1;\n    } else {\n      return a[index].toLowerCase() > b[index].toLowerCase() ? -1 : 1;\n    }\n  });\n};\n\nexport const buildEmptyStringList = (length: number): string[] => {\n  const list: string[] = [];\n  for (let index = 0; index < length; index++) {\n    list.push('');\n  }\n  return list;\n};\n","export interface IData {\n  pageTitle: string;\n  pageDescription: string[];\n  colName: string[];\n  rows: string[][];\n  editRowIndex: number;\n}\n\nexport const LAST_UPDATE_TITLE = '最終更新日時';\n","import { ReactElement, useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { buildEmptyStringList } from 'common/util/array';\nimport { LAST_UPDATE_TITLE } from 'entity/IData';\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    margin: 5,\n  },\n  formControl: {\n    minWidth: 120,\n  },\n}));\n\nconst CustomFormDialog = (props: {\n  isOpen: boolean;\n  onClickCancel: () => void;\n  onClickOK: (row: string[]) => void;\n  title: string;\n  description?: string;\n  colName: string[];\n  editRow?: string[];\n}): ReactElement => {\n  const { isOpen, onClickCancel, onClickOK, title, description, colName, editRow } = props;\n  const classes = useStyles();\n  const [inputData, setInputData] = useState<string[]>(buildEmptyStringList(colName.length));\n\n  // inputDataはダイアログの開閉時に初期化する\n  useEffect(() => {\n    // Edit用データがそろっている場合はそちらを画面に反映する\n    // 最終更新日は除外する\n    if (editRow && Array.isArray(editRow)) {\n      const tempRow = [];\n      for (let index = 0; index < colName.length; index++) {\n        const title = colName[index];\n        if (title !== LAST_UPDATE_TITLE) {\n          tempRow.push(editRow[index]);\n        }\n      }\n      setInputData(tempRow);\n    } else {\n      let adjustLength = 0;\n      if (colName.includes(LAST_UPDATE_TITLE)) {\n        adjustLength = 1;\n      }\n      setInputData(buildEmptyStringList(colName.length - adjustLength));\n    }\n  }, [isOpen, colName, editRow]);\n\n  const handleClickOk = (): void => {\n    onClickOK(inputData);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleOnChange = (e: any, index: number): void => {\n    const value: string = e.target?.value ?? '';\n    const tempData = [...inputData];\n    tempData[index] = value;\n    setInputData(tempData);\n  };\n\n  return (\n    <div>\n      <Dialog maxWidth=\"lg\" open={isOpen} onClose={onClickCancel} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          {description ? <DialogContentText id=\"alert-dialog-description\">{description}</DialogContentText> : null}\n          {colName.map((col: string, index: number) => {\n            // 最終更新日は除外する\n            if (col === LAST_UPDATE_TITLE) return null;\n            return (\n              <TextField\n                key={index}\n                className={classes.input}\n                variant=\"outlined\"\n                margin=\"normal\"\n                id={col}\n                label={col}\n                type=\"\"\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onChange={(e: any): void => handleOnChange(e, index)}\n                value={inputData[index]}\n              />\n            );\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"contained\" color=\"default\">\n            キャンセル\n          </Button>\n          <Button onClick={handleClickOk} variant=\"contained\" color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomFormDialog;\n","import React, { ReactElement } from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst LOCKED = 'locked';\nconst UNLOCKED = 'unlocked';\n\nconst CusstomToggleButtons = (props: { onChange?: (isLocked: boolean) => void }): ReactElement => {\n  const { onChange } = props;\n  const [alignment, setAlignment] = React.useState<string>(LOCKED);\n\n  const handleAlignment = (_event: React.MouseEvent<HTMLElement>, newAlignment: string): void => {\n    // 未選択は許可しない。未選択の場合、nullでセットされている\n    if (!newAlignment) return;\n\n    setAlignment(newAlignment);\n    if (onChange) onChange(newAlignment === LOCKED);\n  };\n\n  return (\n    <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment} aria-label=\"text alignment\">\n      <ToggleButton value={LOCKED} aria-label={LOCKED}>\n        削除ロック\n      </ToggleButton>\n      <ToggleButton value={UNLOCKED} aria-label={UNLOCKED}>\n        削除可能\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n};\n\nexport default CusstomToggleButtons;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  button: {\n    marginLeft: 0,\n    marginRight: 20,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n}));\n","import axios from 'axios';\n\n// API sample:このデータは利用していません。実装サンプルです\nexport const getTodo = async (): Promise<void> => {\n  try {\n    // const response = await axios.get('https://jsonplaceholder.typicode.com/todos/1');\n    // console.log(response.data);\n    await axios.get('https://jsonplaceholder.typicode.com/todos/1');\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import moment from 'moment';\n\nconst download = (fileData: string, type: string, fileName: string): void => {\n  const bom = new Uint8Array([0xef, 0xbb, 0xbf]);\n  const blob = new Blob([bom, fileData], { type });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  document.body.appendChild(a);\n  a.download = fileName;\n  a.href = url;\n  a.click();\n  a.remove();\n  setTimeout(() => {\n    URL.revokeObjectURL(url);\n  }, 1e4);\n};\n\nexport const downloadJson = (fileData: string): void => {\n  download(fileData, 'text/plain', `${moment().format('YYYYMMDD_HHmm')}.json`);\n};\n","const LOCAL_STORAGE_KEY = 'LOCAL_STORAGE_KEY';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getLocalStorage = (): any => {\n  const data: string = localStorage.getItem(LOCAL_STORAGE_KEY) ?? '';\n  if (data.length > 0) return JSON.parse(data);\n  return null;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport const setLocalStorage = (data: any): void => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(data));\n};\n","import { getLocalStorage, setLocalStorage } from 'common/util/localStorage';\nimport { IData, LAST_UPDATE_TITLE } from 'entity/IData';\n\nexport const sampleData: IData = {\n  pageTitle: 'TODOリスト',\n  pageDescription: [\n    '普通のTODOリスト用途だけでなく、部屋の片づけ、持ち物管理など、使い方次第で色々使えます',\n    'カラムの数とタイトルはJSONを編集し再アップロードすることで変更可能',\n    'ページタイトルと説明文もJSONで管理しているので編集可能',\n    '「最終更新日」はヘッダー名称（colName）に1か所だけ設定してください、位置は移動可能',\n  ],\n  colName: ['item1', 'item2', LAST_UPDATE_TITLE],\n  rows: [\n    ['a_itemName11', 'c_itemName21', '2021/06/01 11:22:33'],\n    ['b_itemName12', 'a_itemName22', '2021/06/01 11:22:34'],\n    ['c_itemName13', 'b_itemName23', '2021/06/01 11:22:35'],\n  ],\n  editRowIndex: -1,\n};\n\nexport const sampleData2: IData = {\n  pageTitle: '持ち物リスト',\n  pageDescription: [],\n  colName: ['大分類', '中分類', '小分類', 'メモ', LAST_UPDATE_TITLE],\n  rows: [\n    ['PCデスク', '卓上', '27inch FullHD Display', '', '2021/06/01 11:22:33'],\n    ['PCデスク', '卓上', 'PS4', '下段に移動する', '2021/06/01 11:22:33'],\n    ['PCデスク', '下段', 'デスクトップPC', '', '2021/06/01 11:22:33'],\n    ['PCデスク', '下段', 'BOSEスーパーウーファー', '', '2021/06/01 11:22:33'],\n    ['PCデスク', '下段', 'かご', '要整理', '2021/06/01 11:22:33'],\n  ],\n  editRowIndex: -1,\n};\n\nexport const getDefaultData = (): IData => {\n  const localData = getLocalStorage();\n  if (localData) return localData;\n\n  // 初期データはローカルストレージに入れる\n  setLocalStorage(sampleData);\n\n  return sampleData;\n};\n","import moment from 'moment';\nimport { LAST_UPDATE_TITLE } from 'entity/IData';\n\n// 最終更新日を追加する\nexport const addLastUpdateDate = (colName: string[], row: string[]): string[] => {\n  const tempRow: string[] = [];\n  let rowIndex = 0;\n  for (let index = 0; index < colName.length; index++) {\n    const title = colName[index];\n    if (title === LAST_UPDATE_TITLE) {\n      const now = `${moment().format('YYYY/MM/DD HH:mm:SS')}`;\n      tempRow.push(now);\n    } else {\n      tempRow.push(row[rowIndex]);\n      rowIndex++;\n    }\n  }\n  return tempRow;\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { getTodo } from 'api/sample';\nimport { SORT_MARK_ASC, SORT_MARK_DESC } from 'common/component/CustomTable';\nimport { downloadJson } from 'common/util/download';\nimport { setLocalStorage } from 'common/util/localStorage';\nimport { sort } from 'common/util/array';\nimport { jsonText2obj } from 'common/util/json';\nimport { IData } from 'entity/IData';\nimport { sampleData, sampleData2, getDefaultData } from 'entity/sampleData';\nimport { addLastUpdateDate } from './hooksUtil';\nimport { IAppResources } from './IAppResources';\nimport { MSG_I_001, MSG_E_001, MSG_E_002, MSG_E_003 } from './messageConst';\n\nexport const useResource = (): IAppResources => {\n  useEffect(() => {\n    // API sample:このデータは利用していません。実装サンプルです\n    getTodo();\n  }, []);\n\n  const [data, setData] = useState<IData>(getDefaultData());\n  const [dataNumber, setDataNumber] = useState<number>(1);\n  const [orderColName, setOrderColName] = useState<string>('');\n  const [isOrderAsc, setIsOrderAsc] = useState<boolean>(true);\n  const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState<boolean>(false);\n  const [isOpenFormDialogIns, setIsOpenFormDialogIns] = useState<boolean>(false);\n  const [isOpenFormDialogUpd, setIsOpenFormDialogUpd] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string>('');\n  const [infoMsg, setInfoMsg] = useState<string>('');\n  const [isLocked, setIsLocked] = useState<boolean>(true);\n\n  const clearMsg = (): void => {\n    setInfoMsg('');\n    setErrorMsg('');\n  };\n\n  // ローカルストレージとuseStateのデータを更新する\n  const setLocalStorageAndStateData = useCallback((newData: IData): void => {\n    setLocalStorage(newData);\n    setData(newData);\n  }, []);\n\n  // 新しいRowsデータに更新する\n  const setNewRows = (newRows: string[][]): void => {\n    // ポインタを書き換えるためスプレッド演算子でコピーする\n    const newData = { ...data };\n    newData.rows = [...newRows];\n    setLocalStorageAndStateData(newData);\n  };\n\n  // 1-1.ヘッダークリック\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleHeaderClick = (e: any): void => {\n    clearMsg();\n    // ソートマークは判定で邪魔なので置換して消しておく\n    const colName = (e.target?.textContent ?? '').replace(SORT_MARK_ASC, '').replace(SORT_MARK_DESC, '');\n    const index = data.colName.indexOf(colName);\n    let isOrderAscTemp = true;\n    if (orderColName === colName) {\n      if (isOrderAsc) {\n        isOrderAscTemp = false;\n      }\n    }\n    const sortedRows = sort(data.rows, index, isOrderAscTemp);\n    setNewRows(sortedRows);\n\n    // 次回、逆順でソートを行うために設定しておく\n    setOrderColName(colName);\n    setIsOrderAsc(isOrderAscTemp);\n  };\n\n  // 1-2.行の削除ボタンクリック\n  const handleRowDeleteClick = (rowIndex: number): void => {\n    clearMsg();\n\n    // 削除ロック中は何もしない\n    if (isLocked) {\n      setErrorMsg(MSG_E_003);\n      return;\n    }\n\n    const newRows: string[][] = [];\n    for (let index = 0; index < data.rows.length; index++) {\n      // 削除行以外をコピーしてPushする\n      if (index !== rowIndex) {\n        const row = data.rows[index];\n        newRows.push([...row]);\n      }\n    }\n    setNewRows(newRows);\n  };\n\n  // 1-3.行のコピーボタンクリック\n  const handleRowCopyClick = (rowIndex: number): void => {\n    clearMsg();\n    const newRows: string[][] = [];\n    for (let index = 0; index < data.rows.length; index++) {\n      const row = data.rows[index];\n      newRows.push([...row]);\n      // コピー行は2回Pushする\n      if (index === rowIndex) {\n        newRows.push([...row]);\n      }\n    }\n    setNewRows(newRows);\n  };\n\n  // 1-4.行クリック=Edit\n  const handleRowClick = (rowIndex: number): void => {\n    clearMsg();\n    // Edit対象行をセットしダイアログを開く\n    setData({ ...data, editRowIndex: rowIndex });\n    setIsOpenFormDialogUpd(true);\n  };\n\n  // 2-1.削除ロック\n  const handleChangeDeleteToggle = (isLocked: boolean): void => {\n    clearMsg();\n    setIsLocked(isLocked);\n  };\n\n  // 2-2.ダウンロード\n  const handleDownload = (data: IData): void => {\n    clearMsg();\n    downloadJson(JSON.stringify(data));\n  };\n\n  // 2-3-1.サンプルデータ読込\n  const handleReset = (dataNumber: number): void => {\n    clearMsg();\n    // 確認ダイアログのOK時に参照するため、先に設定しておく\n    setDataNumber(dataNumber);\n\n    setIsOpenConfirmDialog(true);\n  };\n\n  // 2-3-2.サンプルデータ読込 cancel\n  const handleDialogCancel = (): void => {\n    clearMsg();\n    setIsOpenConfirmDialog(false);\n  };\n\n  // 2-3-3.サンプルデータ読込 OK\n  const handleDialogOK = useCallback((): void => {\n    clearMsg();\n    // ボタン押下時に指定したデータをロードする\n    switch (dataNumber) {\n      case 2:\n        setLocalStorageAndStateData(sampleData2);\n        break;\n      default:\n        setLocalStorageAndStateData(sampleData);\n        break;\n    }\n    // ソート順をリセットする\n    setOrderColName('');\n    setIsOrderAsc(true);\n    // ダイアログを閉じる\n    setIsOpenConfirmDialog(false);\n  }, [dataNumber, setIsOpenConfirmDialog, setIsOrderAsc, setLocalStorageAndStateData, setOrderColName]);\n\n  // 2-4-1i.登録ダイアログ open\n  const handleFormDialogInsOpen = (): void => {\n    clearMsg();\n    setIsOpenFormDialogIns(true);\n  };\n\n  // 2-4-2i.登録ダイアログ cancel\n  const handleFormDialogInsCancel = (): void => {\n    clearMsg();\n    setIsOpenFormDialogIns(false);\n  };\n\n  // 2-4-3i.登録ダイアログ OK\n  const handleFormDialogInsOK = (row: string[]): void => {\n    clearMsg();\n    const newRows: string[][] = [];\n\n    // 最終更新日を追加する\n    const tempRow = addLastUpdateDate(data.colName, row);\n\n    // 新規データは先頭に追加する\n    newRows.push(tempRow);\n\n    for (let index = 0; index < data.rows.length; index++) {\n      const row = data.rows[index];\n      newRows.push([...row]);\n    }\n    setNewRows(newRows);\n    setIsOpenFormDialogIns(false);\n  };\n\n  // 2-4-1u.更新ダイアログ open\n  // const handleFormDialogUpdOpen = (): void => {\n  //   clearMsg();\n  //   setIsOpenFormDialogUpd(true);\n  // };\n\n  // 2-4-2u.更新ダイアログ cancel\n  const handleFormDialogUpdCancel = (): void => {\n    clearMsg();\n    setIsOpenFormDialogUpd(false);\n  };\n\n  // 2-4-3u.更新ダイアログ OK\n  const handleFormDialogUpdOK = (row: string[]): void => {\n    clearMsg();\n    const newRows: string[][] = [];\n    for (let index = 0; index < data.rows.length; index++) {\n      if (index === data.editRowIndex) {\n        // 最終更新日を追加する\n        const tempRow = addLastUpdateDate(data.colName, row);\n        newRows.push([...tempRow]);\n      } else {\n        const rowTemp = data.rows[index];\n        newRows.push([...rowTemp]);\n      }\n    }\n    setNewRows(newRows);\n    setIsOpenFormDialogUpd(false);\n  };\n\n  // 2-5-1.upload\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleFile = (e: any): void => {\n    const content = e.target.result;\n    const obj: IData = jsonText2obj(content);\n    if (obj) {\n      // JSONに変換可能なものだけインポートする\n      if (Array.isArray(obj.rows) && obj.rows.length > 0) {\n        // 厳密な型チェックは行わないが、ゼロ件データは除外する\n        setLocalStorageAndStateData(obj);\n        setInfoMsg(MSG_I_001);\n      } else {\n        setErrorMsg(MSG_E_001);\n      }\n    } else {\n      setErrorMsg(MSG_E_002);\n    }\n  };\n\n  // 2-5-2.upload\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleChangeFile = (e: any): void => {\n    clearMsg();\n    try {\n      const file = e.target.files[0];\n      const fileReader = new FileReader();\n      fileReader.onloadend = handleFile;\n      fileReader.readAsText(file);\n    } catch (error) {\n      // ファイル選択を連続で実行、キャンセルを繰り返すとエラーが発生する\n      // console.log('handleChangeFile error', error);\n    }\n  };\n\n  return {\n    data,\n    orderColName,\n    isOrderAsc,\n    isOpenConfirmDialog,\n    isOpenFormDialogIns,\n    isOpenFormDialogUpd,\n    errorMsg,\n    infoMsg,\n    handleHeaderClick,\n    handleRowDeleteClick,\n    handleRowCopyClick,\n    handleRowClick,\n    handleDownload,\n    handleReset,\n    handleDialogCancel,\n    handleDialogOK,\n    handleFormDialogInsOpen,\n    handleFormDialogInsCancel,\n    handleFormDialogInsOK,\n    handleFormDialogUpdCancel,\n    handleFormDialogUpdOK,\n    handleChangeFile,\n    handleChangeDeleteToggle,\n  };\n};\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const jsonText2obj = (jsonText = ''): any => {\n  try {\n    const obj = JSON.parse(jsonText);\n    return obj;\n  } catch (error) {\n    return null;\n  }\n};\n\n// // eslint-disable-next-line @typescript-eslint/no-explicit-any\n// const jsonText2dataList = (jsonText: string): any => {\n//   try {\n//     const jsonObj = JSON.parse(jsonText);\n//     return [...jsonObj.data];\n//   } catch (error) {\n//     return [];\n//   }\n// };\n\n// const formatJsonText = (jsonText = ''): string => {\n//   try {\n//     return JSON.stringify(jsonText2obj(jsonText));\n//   } catch (error) {\n//     return '';\n//   }\n// };\n","export const MSG_I_001 = 'ファイル取込みを行いました。';\nexport const MSG_E_001 = 'データがゼロ件です。';\nexport const MSG_E_002 = 'JSONフォーマットエラーです。ファイルを修正して再度アップロードしてください。';\nexport const MSG_E_003 = '削除ロックを解除してください。';\n","import { ReactElement } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\n\nimport CustomTable from 'common/component/CustomTable';\nimport CustomDialog from 'common/component/CustomDialog';\nimport CustomFormDialog from 'common/component/CustomFormDialog';\nimport CusstomToggleButtons from 'common/component/CusstomToggleButtons';\n\nimport { useStyles } from './styles';\nimport { useResource } from './hooks';\n\nconst App = (): ReactElement => {\n  const {\n    data,\n    orderColName,\n    isOrderAsc,\n    isOpenConfirmDialog,\n    isOpenFormDialogIns,\n    isOpenFormDialogUpd,\n    errorMsg,\n    infoMsg,\n    handleHeaderClick,\n    handleRowDeleteClick,\n    handleRowCopyClick,\n    handleRowClick,\n    handleDownload,\n    handleReset,\n    handleDialogCancel,\n    handleDialogOK,\n    handleFormDialogInsOpen,\n    handleFormDialogInsCancel,\n    handleFormDialogInsOK,\n    handleFormDialogUpdCancel,\n    handleFormDialogUpdOK,\n    handleChangeFile,\n    handleChangeDeleteToggle,\n  } = useResource();\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\">{data.pageTitle}</Typography>\n      {Array.isArray(data.pageDescription) &&\n        data.pageDescription.map((description, index) => (\n          <Typography key={index} variant=\"body1\">\n            - {description}\n          </Typography>\n        ))}\n      <br />\n      <input className={classes.button} type=\"file\" accept=\".json\" onChange={(e): void => handleChangeFile(e)} />\n      <Button className={classes.button} variant=\"contained\" color=\"default\" onClick={(): void => handleDownload(data)}>\n        ダウンロード\n      </Button>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" onClick={(): void => handleReset(1)}>\n        サンプルデータ読込\n      </Button>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" onClick={(): void => handleReset(2)}>\n        サンプルデータ読込2\n      </Button>\n      <CusstomToggleButtons onChange={handleChangeDeleteToggle} />\n      <AddIcon className={classes.icon} color=\"action\" fontSize={'large'} onClick={handleFormDialogInsOpen} />\n      <Typography variant=\"body1\" color=\"error\">\n        {errorMsg}\n      </Typography>\n      <Typography variant=\"body1\">{infoMsg}</Typography>\n      <br />\n      <CustomTable\n        header={data.colName}\n        rows={data.rows}\n        handleHeaderClick={handleHeaderClick}\n        handleRowDeleteClick={handleRowDeleteClick}\n        handleRowCopyClick={handleRowCopyClick}\n        handleRowClick={handleRowClick}\n        orderColName={orderColName}\n        isOrderAsc={isOrderAsc}\n      />\n      <CustomDialog\n        isOpen={isOpenConfirmDialog}\n        onClickCancel={handleDialogCancel}\n        onClickOK={handleDialogOK}\n        title={'注意'}\n        description={'サンプルデータ読込を実行するとデータは初期化されます。実行する場合はOKを押してください。'}\n      />\n      <CustomFormDialog\n        isOpen={isOpenFormDialogIns}\n        onClickCancel={handleFormDialogInsCancel}\n        onClickOK={(row: string[]): void => handleFormDialogInsOK(row)}\n        title={'データ登録'}\n        description={''}\n        colName={data.colName}\n      />\n      <CustomFormDialog\n        isOpen={isOpenFormDialogUpd}\n        onClickCancel={handleFormDialogUpdCancel}\n        onClickOK={(row: string[]): void => handleFormDialogUpdOK(row)}\n        title={'データ更新'}\n        description={''}\n        colName={data.colName}\n        editRow={data.rows[data.editRowIndex]}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './feature/App';\n// import reportWebVitals from \"./reportWebVitals\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root'),\n// );\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}